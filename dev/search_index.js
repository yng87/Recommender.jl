var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = Recommender","category":"page"},{"location":"#Recommender","page":"Home","title":"Recommender","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [Recommender]","category":"page"},{"location":"#Recommender.AbstractDataset","page":"Home","title":"Recommender.AbstractDataset","text":"AbstractDataset\n\nAbstract type for dataset objects.\n\n\n\n\n\n","category":"type"},{"location":"#Recommender.Dataset","page":"Home","title":"Recommender.Dataset","text":"Dataset\n\nDataset struct to manage concrete datasets.\n\n\n\n\n\n","category":"type"},{"location":"#Recommender.kNNRecommender","page":"Home","title":"Recommender.kNNRecommender","text":"kNNRecommender\n\nk: compute k nearest neighbor similarity.\nshrink: if nonzero, decrease contributions from items with few rating.\nweighting: currently supoorts TF-IDF\nnpred: number of retrieval by predict.\n\n\n\n\n\n","category":"type"},{"location":"#Base.download-Tuple{Recommender.Dataset}","page":"Home","title":"Base.download","text":"download(dataset::Dataset; <keyword arguments>)\n\nDownload actual dataset to /dataset/. \n\nArguments\n\nKeyword arguments depend on dataset format.\n\ndataset.format=zip: see download_zip.\n\n\n\n\n\n","category":"method"},{"location":"#MLJModelInterface.fit","page":"Home","title":"MLJModelInterface.fit","text":"fit(model::kNNRecommender, verbosity::Int, X, y, w=nothing)\n\nfit kNNRecommender. For ItemkNN, X = userids, y = itemids. w is additional weighting, for instance, rating of user to item.\n\n\n\n\n\n","category":"function"},{"location":"#Recommender.dataset-Tuple{AbstractString}","page":"Home","title":"Recommender.dataset","text":"dataset(name::AbstractString)\n\nReturn Dataset object specified by name.\n\n\n\n\n\n","category":"method"},{"location":"#Recommender.datasets-Tuple{}","page":"Home","title":"Recommender.datasets","text":"datasets()\n\nReturn dataframe of all the dataset information from datasets.csv.\n\n\n\n\n\n","category":"method"},{"location":"#Recommender.download_zip-Tuple{AbstractString,AbstractString,String}","page":"Home","title":"Recommender.download_zip","text":"download_zip(url::AbstractString, name::AbstractString, dirpath::String; <keyword arguments>)\n\nDownload zipped dataset name from url, and place it to dirpath.\n\nKeyword arguments\n\nusecache=true: if true and dirpath already exists, it skips download. If false, it force download by removing dirpath (if exists).\nunzip=true: whether extract datasets from zip.\nremovezip=false: whether remove original zip after extraction.\n\n\n\n\n\n","category":"method"},{"location":"#Recommender.hitrate-Tuple{Any,Any}","page":"Home","title":"Recommender.hitrate","text":"hitrate(recommends, ys)\n\nCompute mean HR.\n\narguments\n\nrecommends: recommends[i] is list of predictions for i-th input.\nys: ys[i] is ground-truth for i-th input.\n\njldoctest julia> hitrate([[1, 3], nothing, [2, 4]], [1, 2, 3]) 0.3333333333333`\n\n\n\n\n\n","category":"method"},{"location":"#Recommender.load-Tuple{Recommender.Dataset}","page":"Home","title":"Recommender.load","text":"load(dataset::Dataset)\n\nLoad dataset. Return type depends on each dataset.  For instance, movielens 1M is loaded as DataFrame.\n\n\n\n\n\n","category":"method"}]
}
